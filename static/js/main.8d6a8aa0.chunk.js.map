{"version":3,"sources":["components/Aux/Aux.jsx","components/WildfireTooltip/WildfireTooltip.js","components/CircleMap/CircleMap.js","components/SummaryBox/SummaryBox.js","components/WildfireTracker/WildfireTracker.js","components/App/App.js","serviceWorker.js","index.js"],"names":["Aux","props","children","WildfireTooltip","react_default","a","createElement","className","data","GEOGRAPHIC","concat","FIRE_STATU","toLowerCase","replace","size","CURRENT_SI","toFixed","checkSize","ignition_date","text","FIRE_CAUSE","CircleMap","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","extent_calcuted","range","fire_size","forEach","d","push","parseFloat","Math","min","max","from","to","s","_this","extent","getExtent","sort","b","Map","center","zoom","TileLayer","url","tiles","attribution","maxZoom","minZoom","map","classField","circleMarkerClassField","CircleMarker","FIRE_ID","LATITUDE","LONGITUDE","color","fillOpacity","radius","mapRange","stroke","weight","Tooltip","components_WildfireTooltip_WildfireTooltip","Component","SummaryBox","stats","out_fires","new_fires","held_fires","controlled_fires","hectares_burned","reduce","sum","item","km_burned","total_fires","length","last_update","returnCurrentTime","i","ts","timestamp","Date","month","returnUTCMonth","getUTCMonth","getUTCDate","getUTCFullYear","toLocaleTimeString","month_num","parseInt","fire_stats","calculateFireStats","onClick","WildfireTracker","call","state","data_all","toggleFireTypeHandler","bind","assertThisInitialized","_this2","Tabletop","init","sheet","callback","tabletop","setState","simpleSheet","fire_class","console","log","data_array","fire_status","filter","e","fire_data","target","split","data_displayed","filterFireData","Aux_Aux","components_CircleMap_CircleMap","id","components_SummaryBox_SummaryBox","googleSheetURL","map_url","App","components_WildfireTracker_WildfireTracker","Boolean","window","location","hostname","match","ReactDOM","render","components_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8d6a8aa0.chunk.js","sourcesContent":["const Aux = (props) => { return props.children; };\n\nexport default Aux;","import React from 'react';\nimport './WildfireTooltip.css';\n\nconst WildfireTooltip = (props) => {\n\treturn(\n\t\t<div className=\"wf-tooltip\">\n\t\t\t<h3>{props.data.GEOGRAPHIC}</h3>\n\t\t\t<p className={`status ${props.data.FIRE_STATU.toLowerCase().replace(/\\s/g, '-')}`}>Status: {props.data.FIRE_STATU}</p>\n\t\t\t<p>{`A fire of ${checkSize(props)} square kilometres started on ${props.data.ignition_date}.`}</p>\n\n\t\t\t<p>Suspected cause: {formatFireCause(props.data.FIRE_CAUSE)}</p>\n\t\t</div>\n\t)\n};\n\nfunction checkSize(props) {\n\tlet size = (props.data.CURRENT_SI / 100).toFixed(2);\n\treturn size < 0.01 ? 'less than 0.01' : size;\n}\n\nfunction formatFireCause(text) {\n\treturn text === '' ? 'unknown' : text.toLowerCase();\n}\n\nexport default WildfireTooltip;","import React, { Component } from 'react';\nimport { CircleMarker, Map, TileLayer, Tooltip } from 'react-leaflet';\nimport WildfireTooltip from '../WildfireTooltip/WildfireTooltip';\n\nimport './CircleMap.css';\n\n\nexport class CircleMap extends Component {\n\tcomponentDidMount() {\n\t\tthis.extent_calcuted = false;\n\t\tthis.range = this.props.range ? this.props.range : [3,50];\n\t}\n\n\tgetExtent(data) {\n\t\tlet fire_size = [];\n\n\t\tdata.forEach(d => {\n\t\t\tfire_size.push(parseFloat(d.CURRENT_SI));\n\t\t});\n\n\t\treturn [Math.min(...fire_size), Math.max(...fire_size)];\n\t}\n\n\tmapRange(from, to, s) {\n\t\treturn to[0] + (s - from[0]) * (to[1] - to[0]) / (from[1] - from[0]);\n\t}\n\n\trender() {\n\t\t// we only want to calculate the extent once, otherwise the circle size changes when toggling by fire_type, which is confusing\n\t\tif (!this.extent_calcuted) {\n\t\t\tthis.extent = this.getExtent(this.props.data);\n\t\t\tthis.extent_calcuted = true;\n\t\t}\n\t\t\n\t\t// reorder array by CURRENT_SI, largest -> smallest\n\t\tthis.props.data.sort((a,b) => {\n\t\t\treturn b.CURRENT_SI - a.CURRENT_SI;\n\t\t});\n\n\t\treturn (\n\t\t\t<Map \n\t\t\t\tcenter={this.props.center} \n\t\t\t\tzoom={this.props.zoom}>\n\n\t\t\t\t<TileLayer url={this.props.tiles} \n\t\t\t\t\tattribution={this.props.attribution} \n\t\t\t\t\tmaxZoom={this.props.maxZoom}\n\t\t\t\t\tminZoom={this.props.minZoom}/>\n\t\t\t\t\n\t\t\t\t{this.props.data.map(d => {\n\t\t\t\t\tlet classField = d[this.props.circleMarkerClassField].toLowerCase().replace(/\\s/g, '-');\n\n\t\t\t\t\treturn <CircleMarker key={d.FIRE_ID} \n\t\t\t\t\t\tcenter={[d.LATITUDE, d.LONGITUDE]} \n\t\t\t\t\t\tclassName={`circle-marker ${classField}`}\n\t\t\t\t\t\tcolor='#FFFFFF'\n\t\t\t\t\t\tfillOpacity='0.7'\n\t\t\t\t\t\tradius={this.mapRange(this.extent, this.range, d.CURRENT_SI)}\n\t\t\t\t\t\tstroke={true}\n\t\t\t\t\t\tweight='0.5'>\n\t\t\t\t\t\t\t<Tooltip>\n\t\t\t\t\t\t\t\t<WildfireTooltip data={d}></WildfireTooltip>\n\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t</CircleMarker>\n\t\t\t\t})}\n\t\t\t</Map>\n\t\t);\n\t}\n}\n\n\nexport default CircleMap;","import React, { Component } from 'react';\nimport './SummaryBox.css';\n\n\nexport class SummaryBox extends Component {\n\tcomponentDidUpdate() {\n\t\t\n\t}\n\n\tcalculateFireStats(data) {\n\t\tlet stats = {\n\t\t\tout_fires: 0,\n\t\t\tnew_fires: 0,\n\t\t\theld_fires: 0,\n\t\t\tcontrolled_fires: 0\n\t\t}\n\n\t\tlet hectares_burned = data.reduce((sum, item) => {\n\t\t\treturn sum + parseFloat(item.CURRENT_SI);\n\t\t}, 0);\n\n\t\tstats.km_burned = (hectares_burned / 100).toFixed(0);\n\t\tstats.total_fires = data.length + 1;\n\n\t\tstats.last_update = this.props.data.length > 0 ? this.returnCurrentTime(this.props.data[0].last_update) : 'Not available';\n\n\t\tfor (let i = 0; i < data.length; ++i) {\n\t\t\tif (data[i].FIRE_STATU === 'New' | data[i].FIRE_STATU == 'Out of Control') {\n\t\t\t\tstats.new_fires++;\n\t\t\t} else if (data[i].FIRE_STATU === 'Being Held') {\n\t\t\t\tstats.held_fires++;\n\t\t\t} else if (data[i].FIRE_STATU === 'Under Control') {\n\t\t\t\tstats.controlled_fires++;\n\t\t\t} else {\n\t\t\t\tstats.out_fires++;\n\t\t\t}\n\t\t}\n\n\t\treturn stats;\n\t}\n\n\treturnCurrentTime(ts) {\n\t\tconst timestamp = new Date(ts);\n\t\tconst month = this.returnUTCMonth(timestamp.getUTCMonth());\n\n\t\treturn `${month} ${timestamp.getUTCDate()}, ${timestamp.getUTCFullYear()} at ${timestamp.toLocaleTimeString()}`\n\t}\n\n\treturnUTCMonth(month_num) {\n\t\tconst month_lookup = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\n\t\treturn month_lookup[parseInt(month_num)];\n\t}\n\n\trender() {\n\t\tconst fire_stats = this.calculateFireStats(this.props.data);\n\t\t// console.log(fire_stats, this.props.data)\n\n\t\treturn (\n\t\t\t<div className=\"summary-box\" onClick={this.props.onClick}>\n\t\t\t\t<h2>Latest wildfire stats</h2>\n\t\t\n\t\t\t\t<div className=\"stat-box\">\n\t\t\t\t\t<div className=\"stat\">\n\t\t\t\t\t\t<p className=\"big-num new\">{fire_stats.new_fires}</p>\n\t\t\t\t\t\t<p className=\"label\">New</p>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"stat\">\n\t\t\t\t\t\t<p className=\"big-num being-held\">{fire_stats.held_fires}</p>\n\t\t\t\t\t\t<p className=\"label\">Held</p>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"stat\">\n\t\t\t\t\t\t<p className=\"big-num under-control\">{fire_stats.controlled_fires}</p>\n\t\t\t\t\t\t<p className=\"label\">Controlled</p>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"stat\">\n\t\t\t\t\t\t<p className=\"big-num out\">{fire_stats.out_fires}</p>\n\t\t\t\t\t\t<p className=\"label\">Out</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<p className=\"last-update\">Last updated: {fire_stats.last_update}</p>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default SummaryBox;\n\n\t\t// <div className=\"stat\">\n\t\t// \t\t\t\t<p className=\"big-num\">{fire_stats.km_burned}</p>\n\t\t// \t\t\t\t<p className=\"label\">Square km<br/>burned</p>\n\t\t// \t\t\t</div>","import React, { Component } from 'react';\nimport Aux from '../Aux/Aux';\nimport Tabletop from 'tabletop';\nimport CircleMap from '../CircleMap/CircleMap';\nimport SummaryBox from '../SummaryBox/SummaryBox';\nimport './WildfireTracker.css';\n\n\nexport class WildfireTracker extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.toggleFireTypeHandler = this.toggleFireTypeHandler.bind(this);\n\t}\n\n\tstate = {\n\t\tcenter: [54.184179, -125.652423],\n\t\tclassField: 'FIRE_STATU',\n\t\tdata: [],\n\t\tdata_all: [],\n\t\tmaxZoom: 8,\n\t\tminZoom: 3,\n\t\tzoom: 5\n\t}\n\tcomponentDidMount() {\n\t\t// load data from Google sheet\n\t\tTabletop.init({\n\t\t\tkey: this.props.sheet,\n\t\t\tcallback: (data, tabletop) => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tdata: data,\n\t\t\t\t\tdata_all: data\n\t\t\t\t});\n\t\t\t},\n\t\t\tsimpleSheet: true\n\t\t});\n\t}\n\n\tfilterFireData(fire_class) {\n\t\tconsole.log(fire_class);\n\n\t\t// currently, 'new' & 'out-of-control' fires are listed as new. Not sure if this is ideal. \n\t\tif (fire_class === 'new') {\n\t\t\tlet data_array = [];\n\t\t\tthis.state.data_all.forEach(d => {\n\t\t\t\tconst fire_status = d.FIRE_STATU.replace(/\\s/g, '-').toLowerCase();\n\n\t\t\t\tif (fire_status === fire_class | fire_status === 'out-of-control') {\n\t\t\t\t\tdata_array.push(d);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn data_array;\n\t\t} else {\n\t\t\treturn this.state.data_all.filter(d => d.FIRE_STATU.replace(/\\s/g, '-').toLowerCase() === fire_class);\n\t\t}\n\t}\n\n\ttoggleFireTypeHandler(e) {\n\t\tlet fire_data;\n\t\tlet fire_class = e.target.className.split(' ')[1];\n\n\t\tif (fire_class === this.state.data_displayed) {\n\t\t\tfire_data = this.state.data_all;\n\t\t\tfire_class = null;\n\t\t} else {\n\t\t\tfire_data = this.filterFireData(fire_class);\n\t\t}\n\n\t\tthis.setState({\n\t\t\tdata_displayed: fire_class,\n\t\t\tdata: fire_data\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Aux>\n\t\t\t\t<CircleMap id=\"mapview\"\n\t\t\t\t\tattribution={this.props.attribution}\n\t\t\t\t\tcenter={this.state.center}\n\t\t\t\t\tcircleMarkerClassField={this.state.classField}\n\t\t\t\t\tdata={this.state.data}\n\t\t\t\t\tmaxZoom={this.state.maxZoom}\n\t\t\t\t\tminZoom={this.state.minZoom}\n\t\t\t\t\ttiles={this.props.tiles}\n\t\t\t\t\tzoom={this.state.zoom}>\n\t\t\t\t</CircleMap>\n\t\t\t\t<SummaryBox\n\t\t\t\t\tdata={this.state.data_all}\n\t\t\t\t\tonClick={this.toggleFireTypeHandler}>\n\t\t\t\t</SummaryBox>\n\t\t\t</Aux>\n\t\t);\n\t}\n}\n\nexport default WildfireTracker;","import React from 'react';\nimport './App.css';\nimport WildfireTracker from '../WildfireTracker/WildfireTracker';\n\n\n// google sheet that stores fire data\nconst googleSheetURL = 'https://docs.google.com/spreadsheets/d/1mg71j-P91H_PpA9OufEPIRrDgpK80nWpN1CKH9LlIBk/edit?usp=sharing';\n// map tiles & attribution\nconst map_url = 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n// const map_url = 'https://api.maptiler.com/maps/topo/{z}/{x}/{y}.png?key=arETEBBqRxRrA5v30F6H'; // topo\n// const map_url = 'https://api.maptiler.com/maps/hybrid/{z}/{x}/{y}.jpg?key=arETEBBqRxRrA5v30F6H'; // satellite hybrid\nconst attribution = '&copy;<a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors';\n\n\n\nfunction App() {\n\treturn (\n\t  \t<div className=\"App\">\n\t  \t\t<h1>B.C. Wildfire Tracker</h1>\n\t\t\t<WildfireTracker \n\t\t\t\tsheet={googleSheetURL}\n\t\t\t\ttiles={map_url}\n\t\t\t\tattribution={attribution}>\n\t\t\t</WildfireTracker>\n\t  \t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}