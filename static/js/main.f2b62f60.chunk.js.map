{"version":3,"sources":["components/Aux/Aux.jsx","components/WildfireTooltip/WildfireTooltip.js","components/CircleMap/CircleMap.js","components/SummaryBox/SummaryBox.js","components/WildfireTracker/WildfireTracker.js","components/App/App.js","serviceWorker.js","index.js"],"names":["Aux","props","children","WildfireTooltip","react_default","a","createElement","Aux_Aux","data","FIRE_STATU","GEOGRAPHIC","size","CURRENT_SI","toFixed","checkSize","text","FIRE_CAUSE","ignition_date","CircleMap","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","_this","console","log","range","extent","getExtent","sort","b","Map","center","zoom","TileLayer","url","tiles","attribution","maxZoom","minZoom","map","d","classField","circleMarkerClassField","toLowerCase","replace","CircleMarker","FIRE_ID","LATITUDE","LONGITUDE","className","concat","color","fillOpacity","radius","mapRange","stroke","weight","Tooltip","components_WildfireTooltip_WildfireTooltip","Component","fire_size","forEach","push","parseFloat","Math","min","max","from","to","s","SummaryBox","stats","out_fires","new_fires","held_fires","controlled_fires","hectares_burned","reduce","sum","item","km_burned","total_fires","length","last_update","i","fire_stats","calculateFireStats","WildfireTracker","call","state","_this2","Tabletop","init","sheet","callback","tabletop","setState","simpleSheet","components_CircleMap_CircleMap","id","components_SummaryBox_SummaryBox","googleSheetURL","map_url","App","components_WildfireTracker_WildfireTracker","Boolean","window","location","hostname","match","ReactDOM","render","components_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f2b62f60.chunk.js","sourcesContent":["const Aux = (props) => { return props.children; };\n\nexport default Aux;","import React from 'react';\nimport Aux from '../Aux/Aux';\n\nconst WildfireTooltip = (props) => {\n\treturn(\n\t\t<Aux>\n\t\t\t<h3>Status: {props.data.FIRE_STATU}</h3>\n\t\t\t<p>Location: {props.data.GEOGRAPHIC}</p>\n\t\t\t<p>Size: {checkSize(props)} square kilometers.</p>\n\t\t\t<p>Cause: {formatFireCause(props.data.FIRE_CAUSE)}</p>\n\t\t\t<p>Started: {props.data.ignition_date}</p>\n\t\t</Aux>\n\t)\n};\n\n\nfunction checkSize(props) {\n\tlet size = (props.data.CURRENT_SI / 100).toFixed(2);\n\treturn size < 0.01 ? 'Spot fire. Less than 0.01' : size;\n}\n\nfunction formatFireCause(text) {\n\treturn text == '' ? 'Not available' : text;\n}\n\nexport default WildfireTooltip;","import React, { Component } from 'react';\nimport { CircleMarker, Map, TileLayer, Tooltip} from 'react-leaflet';\nimport WildfireTooltip from '../WildfireTooltip/WildfireTooltip';\n\nimport './CircleMap.css';\n\n\nexport class CircleMap extends Component {\t\n\trender() {\n\t\tconsole.log(this.props);\n\t\tconst range = this.props.range ? this.props.range : [3,50];\n\t\tconst extent = getExtent(this.props.data);\n\n\t\t// reorder array by CURRENT_SI, largest -> smallest\n\t\tthis.props.data.sort((a,b) => {\n\t\t\treturn b.CURRENT_SI - a.CURRENT_SI;\n\t\t});\n\n\n\t\treturn (\n\t\t\t<Map \n\t\t\t\tcenter={this.props.center} \n\t\t\t\tzoom={this.props.zoom}>\n\n\t\t\t\t<TileLayer url={this.props.tiles} \n\t\t\t\t\tattribution={this.props.attribution} \n\t\t\t\t\tmaxZoom={this.props.maxZoom}\n\t\t\t\t\tminZoom={this.props.minZoom}/>\n\t\t\t\t\n\t\t\t\t{this.props.data.map(d => {\n\t\t\t\t\tconst classField = d[this.props.circleMarkerClassField].toLowerCase().replace(/\\s/g, '-');\n\n\t\t\t\t\treturn <CircleMarker key={d.FIRE_ID} \n\t\t\t\t\t\tcenter={[d.LATITUDE, d.LONGITUDE]} \n\t\t\t\t\t\tclassName={`circle-marker ${classField}`}\n\t\t\t\t\t\tcolor='#FFFFFF'\n\t\t\t\t\t\tfillOpacity='0.7'\n\t\t\t\t\t\tradius={mapRange(extent, range, d.CURRENT_SI)}\n\t\t\t\t\t\tstroke={true}\n\t\t\t\t\t\tweight='0.5'>\n\t\t\t\t\t\t\t<Tooltip>\n\t\t\t\t\t\t\t\t<WildfireTooltip data={d}></WildfireTooltip>\n\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t</CircleMarker>\n\t\t\t\t})}\n\t\t\t</Map>\n\t\t);\n\t}\n}\n\nconst getExtent = function(data) {\n\tlet fire_size = [];\n\n\tdata.forEach(d => {\n\t\tfire_size.push(parseFloat(d.CURRENT_SI));\n\t});\n\n\treturn [Math.min(...fire_size), Math.max(...fire_size)];\n}\n\nconst mapRange = function(from, to, s) {\n  return to[0] + (s - from[0]) * (to[1] - to[0]) / (from[1] - from[0]);\n};\n\n\nexport default CircleMap;","import React, { Component } from 'react';\nimport './SummaryBox.css';\n\n\nexport class SummaryBox extends Component {\n\tcomponentDidUpdate() {\n\t\t\n\t}\n\n\tcalculateFireStats(data) {\n\t\tlet stats = {\n\t\t\tout_fires: 0,\n\t\t\tnew_fires: 0,\n\t\t\theld_fires: 0,\n\t\t\tcontrolled_fires: 0\n\t\t}\n\n\t\tlet hectares_burned = data.reduce((sum, item) => {\n\t\t\treturn sum + parseFloat(item.CURRENT_SI);\n\t\t}, 0);\n\n\t\tstats.km_burned = (hectares_burned / 100).toFixed(0);\n\t\tstats.total_fires = data.length + 1;\n\n\t\tstats.last_update = this.props.data.length > 0 ? this.props.data[0].last_update : 'Not available';\n\n\t\tfor (let i = 0; i < data.length; ++i) {\n\t\t\tif (data[i].FIRE_STATU === 'New') {\n\t\t\t\tstats.new_fires++;\n\t\t\t} else if (data[i].FIRE_STATU === 'Being Held') {\n\t\t\t\tstats.held_fires++;\n\t\t\t} else if (data[i].FIRE_STATU === 'Under Control') {\n\t\t\t\tstats.controlled_fires++;\n\t\t\t} else {\n\t\t\t\tstats.out_fires++;\n\t\t\t}\n\t\t}\n\n\t\treturn stats;\n\t}\n\n\trender() {\n\t\tconst fire_stats = this.calculateFireStats(this.props.data);\n\t\tconsole.log(fire_stats, this.props.data)\n\n\t\treturn (\n\t\t\t<div className=\"summary-box\">\n\t\t\t\t<h2>Latest wildfire stats</h2>\n\t\t\n\t\t\t\t<div className=\"stat-box\">\n\t\t\t\t\t<div className=\"stat\">\n\t\t\t\t\t\t<p className=\"big-num new\">{fire_stats.new_fires}</p>\n\t\t\t\t\t\t<p className=\"label\">New</p>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"stat\">\n\t\t\t\t\t\t<p className=\"big-num being-held\">{fire_stats.held_fires}</p>\n\t\t\t\t\t\t<p className=\"label\">Held</p>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"stat\">\n\t\t\t\t\t\t<p className=\"big-num under-control\">{fire_stats.controlled_fires}</p>\n\t\t\t\t\t\t<p className=\"label\">Controlled</p>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"stat\">\n\t\t\t\t\t\t<p className=\"big-num out\">{fire_stats.out_fires}</p>\n\t\t\t\t\t\t<p className=\"label\">Out</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<p className=\"last-update\">Last updated: {fire_stats.last_update}</p>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default SummaryBox;\n\n\t\t// <div className=\"stat\">\n\t\t// \t\t\t\t<p className=\"big-num\">{fire_stats.km_burned}</p>\n\t\t// \t\t\t\t<p className=\"label\">Square km<br/>burned</p>\n\t\t// \t\t\t</div>","import React, { Component } from 'react';\nimport Aux from '../Aux/Aux';\nimport Tabletop from 'tabletop';\nimport CircleMap from '../CircleMap/CircleMap';\nimport SummaryBox from '../SummaryBox/SummaryBox';\nimport './WildfireTracker.css';\n\n\nexport class WildfireTracker extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tcenter: [54.184179, -125.652423],\n\t\t\tclassField: 'FIRE_STATU',\n\t\t\tdata: [],\n\t\t\tmaxZoom: 8,\n\t\t\tminZoom: 3,\n\t\t\tzoom: 5\n\t\t}\n\t}\n\tcomponentDidMount() {\n\t\t// load data from Google sheet\n\t\tTabletop.init({\n\t\t\tkey: this.props.sheet,\n\t\t\tcallback: (data, tabletop) => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tdata: data\n\t\t\t\t});\n\t\t\t},\n\t\t\tsimpleSheet: true\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Aux>\n\t\t\t\t<CircleMap id=\"mapview\"\n\t\t\t\t\tattribution={this.props.attribution}\n\t\t\t\t\tcenter={this.state.center}\n\t\t\t\t\tcircleMarkerClassField={this.state.classField}\n\t\t\t\t\tdata={this.state.data}\n\t\t\t\t\tmaxZoom={this.state.maxZoom}\n\t\t\t\t\tminZoom={this.state.minZoom}\n\t\t\t\t\ttiles={this.props.tiles}\n\t\t\t\t\tzoom={this.state.zoom}>\n\t\t\t\t</CircleMap>\n\t\t\t\t<SummaryBox\n\t\t\t\t\tdata={this.state.data}>\n\t\t\t\t</SummaryBox>\n\t\t\t</Aux>\n\t\t);\n\t}\n}\n\nexport default WildfireTracker;","import React from 'react';\nimport './App.css';\nimport WildfireTracker from '../WildfireTracker/WildfireTracker';\n\n\n// google sheet that stores fire data\nconst googleSheetURL = 'https://docs.google.com/spreadsheets/d/1mg71j-P91H_PpA9OufEPIRrDgpK80nWpN1CKH9LlIBk/edit?usp=sharing';\n// map tiles & attribution\nconst map_url = 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';\nconst attribution = 'attribution=\"&copy;<a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"';\n\n\n\nfunction App() {\n\treturn (\n\t  \t<div className=\"App\">\n\t  \t\t<h1>B.C. Wildfire Tracker</h1>\n\t\t\t<WildfireTracker \n\t\t\t\tsheet={googleSheetURL}\n\t\t\t\ttiles={map_url}\n\t\t\t\tattribution={attribution}>\n\t\t\t</WildfireTracker>\n\t  \t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}